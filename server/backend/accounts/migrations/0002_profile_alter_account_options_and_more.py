# Generated by Django 5.2.5 on 2025-08-21 13:36

import datetime
import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('account', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='profile', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('starting_weight', models.DecimalField(decimal_places=2, help_text='Weight in kilograms (20-500 kg)', max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('20.00')), django.core.validators.MaxValueValidator(Decimal('500.00'))], verbose_name='Starting Weight (kg)')),
                ('current_weight', models.DecimalField(decimal_places=2, help_text='Current weight in kilograms', max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('20.00')), django.core.validators.MaxValueValidator(Decimal('500.00'))], verbose_name='Current Weight (kg)')),
                ('goal_weight', models.DecimalField(decimal_places=2, help_text='Target weight in kilograms', max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('20.00')), django.core.validators.MaxValueValidator(Decimal('500.00'))], verbose_name='Goal Weight (kg)')),
                ('start_weight_date', models.DateField(default=datetime.date.today, verbose_name='Starting Weight Date')),
                ('activity_level', models.CharField(choices=[('sedentary', 'Sedentary (little/no exercise)'), ('lightly_active', 'Lightly Active (light exercise 1-3 days/week)'), ('moderately_active', 'Moderately Active (moderate exercise 3-5 days/week)'), ('very_active', 'Very Active (hard exercise 6-7 days/week)'), ('extremely_active', 'Extremely Active (very hard exercise, physical job)')], max_length=20, verbose_name='Activity Level')),
                ('body_goal', models.CharField(choices=[('lose_weight', 'Lose Weight'), ('gain_weight', 'Gain Weight'), ('maintain_weight', 'Maintain Weight'), ('gain_muscle', 'Gain Muscle'), ('build_strength', 'Build Strength'), ('improve_endurance', 'Improve Endurance'), ('general_fitness', 'General Fitness')], max_length=20, verbose_name='Primary Body Goal')),
                ('workout_frequency', models.CharField(choices=[('1_2', '1-2 Days per week'), ('3_4', '3-4 Days per week'), ('5_6', '5-6 Days per week'), ('daily', 'Daily')], max_length=10, verbose_name='Workout Frequency')),
                ('workout_location', models.CharField(choices=[('home', 'Home'), ('gym', 'Gym'), ('outdoor', 'Outdoor'), ('mixed', 'Mixed')], max_length=10, verbose_name='Preferred Workout Location')),
                ('injuries', models.TextField(blank=True, help_text='Describe any injuries or physical limitations (max 500 characters)', validators=[django.core.validators.MaxLengthValidator(500)], verbose_name='Current Injuries or Physical Limitations')),
                ('food_allergies', models.TextField(blank=True, help_text='List any food allergies or dietary restrictions (max 500 characters)', validators=[django.core.validators.MaxLengthValidator(500)], verbose_name='Food Allergies and Dietary Restrictions')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this profile is currently active', verbose_name='Profile Active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'User Profile',
                'verbose_name_plural': 'User Profiles',
            },
        ),
        migrations.AlterModelOptions(
            name='account',
            options={'verbose_name': 'Account', 'verbose_name_plural': 'Accounts'},
        ),
        migrations.RemoveField(
            model_name='account',
            name='activity_level',
        ),
        migrations.RemoveField(
            model_name='account',
            name='body_goal',
        ),
        migrations.RemoveField(
            model_name='account',
            name='current_weight',
        ),
        migrations.RemoveField(
            model_name='account',
            name='food_allergies',
        ),
        migrations.RemoveField(
            model_name='account',
            name='goal_weight',
        ),
        migrations.RemoveField(
            model_name='account',
            name='injuries',
        ),
        migrations.RemoveField(
            model_name='account',
            name='workout_frequency',
        ),
        migrations.RemoveField(
            model_name='account',
            name='workout_location',
        ),
        migrations.AddField(
            model_name='account',
            name='date_of_birth',
            field=models.DateField(blank=True, null=True, verbose_name='Date of Birth'),
        ),
        migrations.AlterField(
            model_name='account',
            name='gender',
            field=models.CharField(choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other'), ('prefer_not_to_say', 'Prefer not to say')], max_length=20, verbose_name='Gender'),
        ),
        migrations.AlterField(
            model_name='account',
            name='height_ft',
            field=models.PositiveSmallIntegerField(help_text='Height in feet (3-8)', validators=[django.core.validators.MinValueValidator(3), django.core.validators.MaxValueValidator(8)], verbose_name='Height (feet)'),
        ),
        migrations.AlterField(
            model_name='account',
            name='height_in',
            field=models.PositiveSmallIntegerField(help_text='Additional inches (0-11)', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(11)], verbose_name='Height (inches)'),
        ),
        migrations.CreateModel(
            name='WeightHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weight', models.DecimalField(decimal_places=2, help_text='Weight in kilograms', max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('20.00')), django.core.validators.MaxValueValidator(Decimal('500.00'))], verbose_name='Weight (kg)')),
                ('recorded_date', models.DateField(help_text='Date when the weight was recorded', verbose_name='Date Recorded')),
                ('notes', models.CharField(blank=True, help_text='Optional notes about this weight entry', max_length=200, verbose_name='Notes')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='weight_history', to=settings.AUTH_USER_MODEL, verbose_name='Account')),
            ],
            options={
                'verbose_name': 'Weight History',
                'verbose_name_plural': 'Weight Histories',
                'ordering': ['-recorded_date', '-created_at'],
                'unique_together': {('account', 'recorded_date')},
            },
        ),
    ]
