# Generated by Django 5.2.6 on 2025-09-26 13:21

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DailyEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('total_calories', models.FloatField(default=0.0)),
                ('total_protein', models.FloatField(default=0.0)),
                ('total_carbs', models.FloatField(default=0.0)),
                ('total_fat', models.FloatField(default=0.0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'daily_nutrition_entries',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Food',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('food_id', models.CharField(help_text='FatSecret food ID', max_length=50, unique=True)),
                ('food_name', models.CharField(help_text='Food name from FatSecret', max_length=255)),
                ('food_type', models.CharField(blank=True, help_text='Type of food', max_length=50)),
                ('calories', models.FloatField(default=0.0)),
                ('protein', models.FloatField(default=0.0)),
                ('carbs', models.FloatField(default=0.0)),
                ('fat', models.FloatField(default=0.0)),
                ('brand_name', models.CharField(blank=True, help_text='Brand name if applicable', max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Food',
                'verbose_name_plural': 'Foods',
                'db_table': 'foods',
                'ordering': ['food_name'],
            },
        ),
        migrations.CreateModel(
            name='Meal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meal_type', models.CharField(choices=[('breakfast', 'Breakfast'), ('lunch', 'Lunch'), ('dinner', 'Dinner'), ('snack', 'Snack')], max_length=20)),
                ('meal_name', models.CharField(blank=True, help_text='Optional custom meal name', max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('daily_entry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='meals', to='nutrition.dailyentry')),
            ],
            options={
                'verbose_name': 'Meal',
                'verbose_name_plural': 'Meals',
                'db_table': 'meals',
                'ordering': ['daily_entry__date', 'meal_type'],
            },
        ),
        migrations.CreateModel(
            name='NutritionProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('daily_calories_goal', models.PositiveIntegerField(help_text='Calculated daily calorie target', verbose_name='Daily Calorie Goal')),
                ('daily_protein_goal', models.FloatField(help_text='Calculated daily protein target in grams', verbose_name='Daily Protein Goal (g)')),
                ('daily_carbs_goal', models.FloatField(help_text='Calculated daily carbohydrate target in grams', verbose_name='Daily Carbs Goal (g)')),
                ('daily_fat_goal', models.FloatField(help_text='Calculated daily fat target in grams', verbose_name='Daily Fat Goal (g)')),
                ('bmr', models.FloatField(help_text='Calculated BMR used for macro calculations', verbose_name='Basal Metabolic Rate')),
                ('tdee', models.FloatField(help_text='Calculated TDEE used for calorie goal', verbose_name='Total Daily Energy Expenditure')),
                ('is_auto_calculated', models.BooleanField(default=True, help_text='Whether macros were auto-calculated or manually set')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('account', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='nutrition_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Nutrition Profile',
                'verbose_name_plural': 'Nutrition Profile',
                'db_table': 'nutrition_profile',
            },
        ),
        migrations.AddField(
            model_name='dailyentry',
            name='nutrition_profile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='daily_entries', to='nutrition.nutritionprofile'),
        ),
        migrations.CreateModel(
            name='Serving',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serving_id', models.CharField(help_text='FatSecret serving ID', max_length=50)),
                ('metric_serving_amount', models.FloatField(help_text='Amount in grams')),
                ('metric_serving_unit', models.CharField(default='g', help_text="Usually 'g' for grams", max_length=10)),
                ('calories', models.FloatField(default=0.0)),
                ('protein', models.FloatField(default=0.0)),
                ('carbs', models.FloatField(default=0.0)),
                ('fat', models.FloatField(default=0.0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('food', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='servings', to='nutrition.food')),
            ],
            options={
                'verbose_name': 'Serving',
                'verbose_name_plural': 'Servings',
                'db_table': 'servings',
                'unique_together': {('food', 'serving_id')},
            },
        ),
        migrations.CreateModel(
            name='MealFoodEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.FloatField(default=1.0, help_text='Number of servings consumed')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('food', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nutrition.food')),
                ('meal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='food_entries', to='nutrition.meal')),
                ('serving', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nutrition.serving')),
            ],
            options={
                'verbose_name': 'Meal Food Entry',
                'verbose_name_plural': 'Meal Food Entries',
                'db_table': 'meal_food_entries',
            },
        ),
        migrations.AlterUniqueTogether(
            name='dailyentry',
            unique_together={('nutrition_profile', 'date')},
        ),
    ]
